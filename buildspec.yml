# buildspec.yml 파일은 애플리케이션에 대한 빌드 실행 중에 수행해야 하는 모든 작업을 
# AWS CodeBuild에 알려줍니다. 논리적 구성을 위해 빌드 실행을 별도의 미리 정의된 단계로 
# 나누고 빌드 실행 작업을 수행하는 프로비저닝된 빌드 서버에서 실행될 명령을 나열할 수 있습니다.
version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      # 후속 docker push 명령이 승인되도록 docker 자격 증명을 검색합니다. 
      # AWS CodeBuild 프로젝트의 인스턴스에 할당된 IAM 역할과 연결된 AWS 자격 증명을 
      # 사용하여 AWS CLI에서 자동으로 인증이 수행됩니다.
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t todolist/service:latest .
      # 서비스 컨테이너에 대한 적절한 Amazon ECR 엔드포인트와 관련 리포지토리를 사용하여 
      # 빌드된 도커 이미지에 태그를 지정합니다. 이렇게 하면 나중에 docker push 명령이 
      # 실행될 때 적절한 리포지토리로 푸시됩니다.
      - docker tag todolist/service:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/todolist/service:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image..
      # ECR에 이미지를 푸시합니다.
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/todolist/service:latest
      - echo Completed pushing Docker image. Deploying Docker image to AWS Fargate on `date`
      # ECR에 푸시된 이미지의 이름과 위치가 포함된 아티팩트 파일을 생성합니다. 
      # 이는 AWS CodePipeline에서 이 특정 컨테이너를 Amazon ECS에 자동 배포하는 데 사용됩니다.
      - printf '[{"name":"TodoList-Service","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/todolist/service:latest > imagedefinitions.json
artifacts:
  # 이전 줄에서 생성된 imagedefinitions.json 파일이 빌드 실행 작업의 
  # 아티팩트로 참조될 수 있음을 나타냅니다.
  files: imagedefinitions.json
